/* Mobile-only fixes (≤768px). Desktop/laptop remain untouched. */
@media (max-width: 768px) {

  /* =========================
     GLOBAL (safe guards)
  ========================== */
  html, body { overflow-x: hidden; }
  img, video, canvas { max-width: 100%; height: auto; display: block; }

  /* =========================
     HERO (#home)
     - Toolbar = horizontal, swipe scroll
     - Title/details visible
     - Hero image LAST
     - No overlap into next section
  ========================== */

  /* Toolbar rail */
  #home > nav {
    position: static !important;
    width: 100% !important;
    margin: 0 0 .5rem 0 !important;
    z-index: 2 !important;
  }
  #home nav ul {
    display: flex !important;
    flex-direction: row !important;
    flex-wrap: nowrap !important;           /* single row */
    overflow-x: auto !important;            /* horizontal scroll */
    overflow-y: hidden !important;
    -webkit-overflow-scrolling: touch !important;
    gap: .75rem !important;
    padding: .25rem .5rem !important;
    white-space: nowrap !important;
  }
  #home nav li { flex: 0 0 auto !important; }

  /* Content stack: one column; text first, media last */
  #home { position: relative; z-index: 0; padding-top: 3.5rem; padding-bottom: 1rem; }
  #home .container { position: relative; z-index: 1; }
  #home .container .grid {
    display: grid !important;
    grid-template-columns: 1fr !important;
    align-items: start !important;
    gap: 1rem !important;
  }
  /* text block wrapper in your hero */
  #home .container .grid > .space-y-5 { order: 1 !important; }
  /* common media wrapper in your hero */
  #home .container .grid > .justify-self-center { order: 2 !important; }
  /* fallback if media is a direct <figure> */
  #home .container .grid > figure { order: 2 !important; }

  /* ensure nothing keeps hero copy hidden (framer initial) */
  #home .container .grid > * {
    opacity: 1 !important;
    transform: none !important;
    visibility: visible !important;
  }

  /* =========================
     EXPERIENCE (data-section="experience")
     - No duplicate deck (flow only)
     - Both cards expand fully (no clipping)
     - Keep card animations; just disable clipping/locking containers
  ========================== */

  /* Use flowing deck; hide locked deck (prevents duplicates) */
  [data-section="experience"] .stageFlow  { display: block !important; opacity: 1 !important; visibility: visible !important; }
  [data-section="experience"] .stageFixed { display: none !important; }

  /* Kill tall lock window and any sticky that can trap scroll */
  [data-section="experience"] .lockWindow      { height: auto !important; }
  [data-section="experience"] .subheaderSticky { position: relative !important; top: auto !important; }

  /* Let the stack flow; remove transforms that can push offscreen */
  [data-section="experience"] .stageHolder,
  [data-section="experience"] .stack {
    position: static !important;
    height: auto !important;
    width: 100% !important;
    transform: none !important;
    overflow: visible !important;
  }

  /* Cards: single pass, full-width, readable */
  [data-section="experience"] .card {
    position: relative !important;
    inset: auto !important;
    width: 100% !important;
    max-width: none !important;
    margin: 0 0 1rem 0 !important;
    overflow: visible !important;            /* show expanded content */
    transform: none !important;              /* stop side slide-ins misplacing content */
    opacity: 1 !important;
    transition: none !important;
    background: rgba(13,19,29,0.98) !important;
    backdrop-filter: none !important;
    z-index: 1 !important;
  }
  /* make sure the FIRST card can overlay below content when expanded */
  [data-section="experience"] .card:first-of-type { z-index: 3 !important; }

  /* Expanded bodies must participate in layout (no absolute clipping) */
  [data-section="experience"] .card [style*="position: absolute"] { position: static !important; }

  /* Remove any caps/clip masks that hide expanded content */
  [data-section="experience"] .card *[class*="details"],
  [data-section="experience"] .card *[class*="body"],
  [data-section="experience"] .card *[class*="inner"],
  [data-section="experience"] .card *[class*="content"],
  [data-section="experience"] .card *[style*="max-height"],
  [data-section="experience"] .card *[style*="clip-path"],
  [data-section="experience"] .card *[style*="mask-image"],
  [data-section="experience"] .card *[style*="-webkit-mask-image"] {
    max-height: none !important;
    height: auto !important;
    overflow: visible !important;
    clip-path: none !important;
    -webkit-mask-image: none !important;
            mask-image: none !important;
  }

  /* Metric tiles → one column on phones */
  [data-section="experience"] .metricsGrid { grid-template-columns: 1fr !important; }

  /* =========================
     TESTIMONIALS (#testimonials)
     - Keep desktop text formatting; only move image under details
     - Handle both normal and reversed desktop rows
  ========================== */

  /* Stack each pair vertically on phones */
  #testimonials [class*="md:flex-row"] { flex-direction: column !important; }

  /* If desktop uses reversed rows for alternation, swap children on mobile */
  #testimonials [class*="md:flex-row-reverse"] > :first-child { order: 2 !important; }
  #testimonials [class*="md:flex-row-reverse"] > :last-child  { order: 1 !important; }

  /* Ensure the block with an image ends up under the text regardless of alternation.
     (We avoid :has() for compatibility by targeting common image containers.) */
  #testimonials figure { order: 2 !important; }          /* if using <figure> for images */
  #testimonials [class*="image"], 
  #testimonials [class*="img"], 
  #testimonials [class*="media"] { order: 2 !important; } /* common naming fallbacks */

  #testimonials img { width: 100%; height: auto; display: block; }

  /* Avoid sticky/fixed inside testimonials that can trap scroll */
  #testimonials [style*="position: sticky"],
  #testimonials [style*="position: fixed"] {
    position: static !important; top: auto !important;
  }
}














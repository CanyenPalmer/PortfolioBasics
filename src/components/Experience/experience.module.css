/* Lock window hosts the sticky/fixed subheader and the stage */
.lockWindow { position: relative; width: 100%; }

/* Wrapper so the spacer sits exactly where the bar would be in flow */
.subheaderWrapper {
  position: relative;
  contain: layout paint; /* isolates tiny repaints */
}

/* Impact subheader â€” identical geometry; GPU compositing to avoid jiggle */
.subheaderSticky {
  position: sticky;
  top: var(--top-offset, 0px);
  left: 0;
  right: 0;
  width: 100%;
  z-index: 50;
  background: transparent;
  padding-bottom: 0.5rem;

  backface-visibility: hidden;
  transform: translateZ(0);
  will-change: opacity;
}

/* Spacer that preserves layout when bar becomes fixed */
.subheaderSpacer {
  width: 100%;
}

/* Subheader row + underline */
.subheaderRow { display: flex; align-items: center; gap: 0.75rem; }
.underlineTrack { flex: 1; height: 2px; background: transparent; position: relative; overflow: hidden; }
.underlineFill { height: 2px; background: var(--accent, #7dd3fc); width: 0%; transition: width .2s ease; }

/* Stage geometry (bar is pinned; no vertical shift) */
.stageHolder {
  position: relative;
  height: calc(100vh - var(--sub-h, 56px) - var(--top-offset, 0px) - var(--sub-shift, 0px));
  box-sizing: border-box;
}
.stageFlow {
  position: relative;
  height: calc(100vh - var(--sub-h, 56px) - var(--top-offset, 0px) - var(--sub-shift, 0px));
  box-sizing: border-box;
  z-index: 30;
}
.stageFixed {
  position: fixed;
  top: calc(var(--top-offset, 0px) + var(--sub-h, 56px) + var(--sub-shift, 0px));
  left: 0; right: 0;
  height: calc(100vh - var(--sub-h, 56px) - var(--top-offset, 0px) - var(--sub-shift, 0px));
  box-sizing: border-box; z-index: 40;
}

.isHidden { visibility: hidden; }
.isVisible { visibility: visible; }

.stack {
  position: relative; width: min(92vw, 1120px); height: 100%;
  margin: 0 auto; display: grid; place-items: center;
}

.card {
  position: absolute; inset: auto; margin: 0;
  width: min(90vw, 960px); max-width: 960px; padding: 1.1rem;
  border-radius: 1rem; border: 1px solid rgba(255,255,255,0.1);
  background: rgba(13,19,29,0.65); backdrop-filter: blur(6px);
  box-shadow: 0 10px 30px rgba(0,0,0,0.25); will-change: transform, opacity; cursor: pointer;
}
.cardCollapsed {}
.cardFocused  { border-color: rgba(125,211,252,0.45); box-shadow: 0 0 0 1px rgba(125,211,252,0.25), 0 12px 40px rgba(0,0,0,0.35); }
.cardExpanded { border-color: rgba(125,211,252,0.6);  box-shadow: 0 0 0 1px rgba(125,211,252,0.35), 0 18px 60px rgba(0,0,0,0.45); }

.metricsGrid { display: grid; grid-template-columns: repeat(3, minmax(0, 1fr)); gap: 0.75rem; }

.bulletLine { position: relative; padding-left: 1.25rem; }
.bulletLine::before { content: ">"; position: absolute; left: 0; top: 0; color: rgba(125, 211, 252, 0.9); }

.pillLink { display: inline-flex; align-items: center; gap: .375rem; padding: .375rem .625rem; border-radius: 9999px;
  border: 1px solid rgba(255,255,255,0.12); background: rgba(255,255,255,0.04); text-decoration: none; font-size: .8125rem;
  transition: border-color .2s ease, background .2s ease, color .2s ease;
}
.pillLink:hover { border-color: rgba(125,211,252,0.6); background: rgba(125,211,252,0.08); color: #fff; }

@media (max-width: 1024px) {
  .metricsGrid { grid-template-columns: repeat(2, minmax(0, 1fr)); }
  .card { width: min(94vw, 960px); }
}
@media (max-width: 640px) {
  .metricsGrid { grid-template-columns: 1fr; }
  .card { width: min(96vw, 960px); padding: .95rem; }
}

